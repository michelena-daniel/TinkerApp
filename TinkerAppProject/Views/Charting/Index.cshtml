@using TinkerAppProject.Models.Charting
@model ChartModel

@{
    ViewData["Title"] = "Chart Index";
}

<!DOCTYPE html>
<html>
<body>
    <div class="row">
        <div class="col">
            @using (Html.BeginForm("GenerateChart", "Charting"))
            {
                <div class="form-floating mb-3">
                    @Html.DropDownListFor(
                             c => c.Type,
                             Enum.GetValues(typeof(ChartTypeEnum))
                             .Cast<ChartTypeEnum>()
                             .Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() })
                             .Prepend(new SelectListItem { Text = "--Select option--", Value = "" }),
                             new { @onchange = "chartSelect(this.value)" }
                             )
                </div>
                <div class="form-floating mb-3" id="additionalContent" style="display:none">
                    <div id="barOptions" style="display:none">
                        <div class="form-floating mb-3">
                            <input asp-for="@Model.MonthRange" class="form-control" type="number" required min="1" max="100">
                            <label asp-for="@Model.MonthRange">Month Range</label>
                            <span asp-validation-for="@Model.MonthRange" class="text-danger"></span>
                        </div>
                        <div class="form-floating mb-3">
                            @Html.DropDownListFor(c => c.LabelType, Enum.GetValues(typeof(LabelTypeEnum)).Cast<LabelTypeEnum>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((int)x).ToString() }))
                        </div>
                    </div>
                    <div id="doughnutOptions" style="display:none">
                        Donut options
                    </div>
                    <div id="radarOptions" style="display:none">
                        Radar options
                    </div>
                    <button class="btn btn-primary" type="submit">Generate</button>
                </div>
            }
        </div>
    </div>    
</body>
</html>

<script>
    function chartSelect(chartType) {
        const barOptions = document.getElementById('barOptions');
        const doughnutOptions = document.getElementById('doughnutOptions');
        const radarOptions = document.getElementById('radarOptions');
        const additionalContent = document.getElementById('additionalContent');
        additionalContent.style.display = '';
        const options = [barOptions, doughnutOptions, radarOptions];
        options.forEach(option => option.style.display = 'none');
        const chartTypeInt = parseInt(chartType, 10);
        switch (chartTypeInt) {
            case 1:
                barOptions.style.display = '';
                break;
            case 2:
                doughnutOptions.style.display = '';
                break;
            case 3:
                radarOptions.style.display = '';
                break;
            default:
                additionalContent.style.display = 'none';
                break;
        }
    }
</script>