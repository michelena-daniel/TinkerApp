@using TinkerAppProject.Models.Charting
@model ChartModel

@{
    ViewData["Title"] = "Generate Chart";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<h1>Your @Model.Type.ToString() chart</h1>

@{
    switch (Model.Type.ToString())
    {
        case "Bar":
            <div class="row">
                <div class="col" style="max-height: 300px;">
                    <label>Bar Chart</label>
                    <canvas id="barChart"></canvas>
                </div>                
            </div>
            <script>
                const bar = document.getElementById('barChart');
                new Chart(bar, {
                    type: 'bar',
                    data: {
                        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                        datasets: [{
                            label: '# of Votes',
                            data: [12, 19, 3, 5, 2, 3],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            </script>
            break;
        case "Doughnut":
            <div class="row">               
                <div class="col" style="max-height: 300px;">
                    <label>Doughnut Chart</label>
                    <canvas id="donutChart"></canvas>
                </div>                
            </div>
            <script>
                const donut = document.getElementById('donutChart');
                new Chart(donut, {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                            data: [10, 20, 30]
                        }],
                        labels: [
                            'Red',
                            'Yellow',
                            'Blue'
                        ]
                    }
                });
            </script>
            break;
        case "Radar":
            <div class="row">               
                <div class="col" style="max-height: 300px">
                    <label>Radar Chart</label>
                    <canvas id="radarChart"></canvas>
                </div>
            </div>
            <script>
                const radar = document.getElementById('radarChart');
                new Chart(radar, {
                    type: 'radar',
                    data: {
                        labels: [
                            'Eating',
                            'Drinking',
                            'Sleeping',
                            'Designing',
                            'Coding',
                            'Cycling',
                            'Running'
                        ],
                        datasets: [{
                            label: 'My First Dataset',
                            data: [65, 59, 90, 81, 56, 55, 40],
                            fill: true,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgb(255, 99, 132)',
                            pointBackgroundColor: 'rgb(255, 99, 132)',
                            pointBorderColor: '#fff',
                            pointHoverBackgroundColor: '#fff',
                            pointHoverBorderColor: 'rgb(255, 99, 132)'
                        }, {
                            label: 'My Second Dataset',
                            data: [28, 48, 40, 19, 96, 27, 100],
                            fill: true,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgb(54, 162, 235)',
                            pointBackgroundColor: 'rgb(54, 162, 235)',
                            pointBorderColor: '#fff',
                            pointHoverBackgroundColor: '#fff',
                            pointHoverBorderColor: 'rgb(54, 162, 235)'
                        }]
                    },
                    options: {
                        elements: {
                            line: {
                                borderWidth: 3
                            }
                        }
                    },
                });
            </script>
            break;
        default:
            <script>

            </script>
            break;
    }
}